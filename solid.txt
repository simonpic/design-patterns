Single Responsibility Principle
    A class should only have on reason to change
    Separation of concerns - different classes handling different, independent tasks/problems

Open-Closed Principle
    Classes should be open for extension but closed for modification

Liskov Substition Principle
    You should be able to substitute a base type for a subtype

Interface Segregation Principle
    Don't put too much into an intergace; split into seperate interfaces
    YAGNI - You Ain't Going To Need It

Dependency Inversion Principle
    High-level modules should not depend upon low-level ones; use abstractions